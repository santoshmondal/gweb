<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- DEMO::1 -->
	<bean name='hello' class="in.async.spring.intro.Hello" />

	<!-- DEMO::2 -->
	<bean name='hc' class="in.async.spring.intro.Hello">
		<constructor-arg name="arg1" value="value1" />
		<constructor-arg name='arg2' value='value2' />
	</bean>


	<!-- DEMO::3 -->
	<bean name="hcInt" class="in.async.spring.intro.Hello">
		<constructor-arg name='arg1' value="java" index="0"
			type="java.lang.String"></constructor-arg>
		<constructor-arg name='intArg' value="100" index="1"
			type="int"></constructor-arg>
	</bean>


	<!-- DEMO::4 -->
	<bean name="hcgs" class='in.async.spring.intro.Hello'>
		<property name="arg1" value="Some String Value" />
		<property name="arg2" value='More String value' />
		<property name="intArg" value="200" />
	</bean>


	<!-- DEMO::5 -->
	<bean name='studbean' class='in.async.spring.intro.Student'>
		<property name="name" value='JavaSpringDeveloper'></property>
	</bean>
	<bean name='refbean' class='in.async.spring.intro.Hello'>
		<property name="stud" ref="studbean"></property>
	</bean>



	<!-- DEMO::AOP -->
	<bean id='myaopben' class='in.async.spring.aop.MyAOP' />
	<aop:config>
		<aop:aspect id="aspectid1" ref='myaopben'>
			<aop:pointcut id="pointcutid" expression="execution(* in.async.spring.intro.Hello.*(..))" />
			<aop:before pointcut-ref="pointcutid" method="someAopMethod" />
			<aop:after pointcut-ref="pointcutid" method="someMoreAopMethod" />
		</aop:aspect>
	</aop:config>


	<!-- HIBERNATE -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/dac2013" />
		<property name="username" value="rediff" />
		<property name="password" value="rediff" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

		<property name="dataSource">
			<ref bean="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>

		<property name="mappingResources">
			<list>
				<value>/in/async/spring/hibernate/student.hbm.xml</value>
			</list>
		</property>
	</bean>	
	<bean name='hsbean' class='in.async.spring.hibernate.SpringHibernateBean'>
		<property name="sessionFactory" ref='sessionFactory' />
	</bean>
	
	<!-- SUPPORT FOR TXN MANAGER -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	  <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:advice id='txAdvice' transaction-manager="transactionManager">
    	<tx:attributes>
    		<tx:method name="add*" propagation="REQUIRED" />
    	</tx:attributes>
    </tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* in.async.spring.hibernate.SpringHibernateBean.*(..))"/>
	</aop:config>    
	
</beans>
